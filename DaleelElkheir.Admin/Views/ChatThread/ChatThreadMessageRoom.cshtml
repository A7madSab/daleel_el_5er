@model IEnumerable<DaleelElkheir.Admin.Models.Chat.ChatThreadModel>

@{
    ViewBag.Title = "ChatThreadList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
  .circle {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  font-size: 11px;
  color: #fff;
  line-height: 20px;
  text-align: center;
  background: #d41414;
  display: table-cell;
  text-align: center;
  vertical-align: middle;

}
</style>

<br />
<div class="form-group row">
    @*<div class="col-md-4 pull-right" style="margin-right:-120px;">*@
    <div class="col-md-4 pull-right">
        <div class="panel panel-primary">
            <div class="panel-heading clearfix">
                @*<a data-toggle="collapse" href="#collapse1" style="color:white; text-decoration: none;"><h5>Chats</h5></a>*@
                <div >
                    <input type="text" id="txtFilterThreads" class="custom_input" style="margin-top:10px;">
                    <button class="btn btn-default" id="btnFilterThreads" style="height: 30px;">
                        Search
                    </button>
                </div>
            </div>
            <div id="collapse1" class="panel-body panel-collapse collapse in" style="min-height: 493px; max-height: 430px; overflow-y: scroll;">

                @foreach (var item in Model)
                {
                    
                    <div style="padding-bottom:5px;">
                      <a  name="usrs" href="#" id="@(item.User.ID)" onclick="SelectUser(this,'@item.User.ID','@item.CaseID','@item.ID','@(item.User.Name + " , "+item.HelpCase.NameEn)')" value="@item.User.ID" style="text-decoration:none"> 
  
                          <span class="circle" style=@(item.SeenCount==0 ?"background-color:white":"") >@item.SeenCount</span>
                          
                         @(item.User.Name + " , " + item.HelpCase.NameEn)
                           </a>
                        
                    </div>
                    @*<br />*@
                }
                
            </div>
        </div>
    </div>

    @*<div class="col-md-10" style="margin-left:-120px;">*@
    <div class="col-md-8">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading" >
                    <h5 id="chatHead">Chats</h5>
                </div>
                <div class="panel-body" style="min-height: 400px; max-height: 430px; overflow-y: scroll;">

                    <ul id="discussion">

                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.Editor("message", new { htmlAttributes = new { @class = "form-control input-lg",@style= "min-width:585px" } })
                </div>
                <div class="col-md-2">
                    <input type="button" name="Send" id="sendmessage" disabled="disabled" value="Send" class="btn  btn-primary input-lg" style="min-width:100px; " />
                </div>
            </div>
        </div>
   
          
</div>

    @ViewBag.connectedUser

        <input type="hidden" id="UserIDHidden" />
        <input type="hidden" id="CaseIDHidden" />
  


    @section scripts {
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->

        <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
             
                var chat = $.connection.letsChatHub;
                
                // Create a function that the hub can call back to display messages.
                chat.client.appendNewMessage = function (name, IsAdmin, message, caseName) {
                    // Add the message to the page in case the received messages is realted to the selected chat thread
                    var threadName = (name + ' , ' + caseName);
                
                    if (($('#chatHead').text() == threadName) || IsAdmin) {
                        $('#discussion').append('<li><strong>' + htmlEncode(name)
                            + '</strong>: ' + htmlEncode(message) + '</li>');
                    } else {
                        //adding a badge the received message related thread
                        $('#collapse1 > div > a ').each(function () {
                            if (this.innerText.toLowerCase().indexOf(threadName.toLowerCase()) >= 0) {
                                var badgeSpan = $(this).find('span');
                                var newBadge = eval((isNaN(badgeSpan.text()) || badgeSpan.text() == '') ? 0 : badgeSpan.text()) + 1;
                                badgeSpan.text(newBadge);
                                badgeSpan.removeAttr("style");
                            }
                        });
                    }
                    
                };

                chat.client.AddAvailableUser = function (userName) {
                    $('#ConnectedUser').append('<li id=' + userName + 'id>' + userName + '</li>')
                };
                
                chat.client.RemoveUser = function (userName) {
                    $('#' + userName + 'id').remove();
                }


                // Start the connection.
                $.connection.hub.start().done(function () {
                   
                        chat.server.connect(@ViewBag.currentUser);
                    
                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        chat.server.send(@ViewBag.currentUser,$('#UserIDHidden').val(),$('#CaseIDHidden').val(),$('#message').val());
                       // chat.server.send("","4","8","Hello hima");
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    });
                });
                

            });

            $('#btnFilterThreads').click(function () {
                var searchWord = $('#txtFilterThreads').val().toLowerCase();
                $('#collapse1 > div').show();
                if (searchWord!='') {
                    //var theadItems = $('#collapse1 > div > a > .ChatThreadItem');
                    var theadItems = $('#collapse1 > div > a ').each(function () {
                        if (this.innerText.toLowerCase().indexOf(searchWord) >= 0) {
                            $(this).parent().parent().show();
                        } else {
                            $(this).parent().hide();
                        }
                    });
                }
            });

            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }

            function SelectUser(elem,arg1,arg2,arg3,arg4)
            {
               
                $("#UserIDHidden").val(arg1);
                $("#CaseIDHidden").val(arg2);

                var val = arg3;
                var subItems="";
                $.getJSON("@Url.Action("GetMessages", "ChatThread")", { ThreadID: val }, function (data) {
                    $.each(data,function(index,item){
                        subItems+="<li value='"+item+"'>"+item+"</li>"
                    });
                    $("#discussion").html(subItems)
                });
                //////////////
                $("#chatHead").html(arg4)

                if($('#message').val()!="")
                $("#sendmessage").removeProp("disabled");
                
          
                $(elem).children().html("").css('background','white');
            }

            jQuery('#message').on('input', function() {
                if($.trim( $('#message').val() ) !='' && $("#UserIDHidden").val()!="")
                {
                    $("#sendmessage").removeProp("disabled");
                }
                else
                {
                    $("#sendmessage").prop("disabled","disabled");
                }
            });
            $(document).keypress(function (event) {
                var keycode = event.keyCode || event.which;
                if (keycode == '13') {
                    $('#sendmessage').click();
                }
            });


        </script>
    }
